$date
	Sun Oct  2 17:05:44 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_ALU $end
$var wire 32 ! out [31:0] $end
$var wire 32 " o [31:0] $end
$var reg 32 # a [31:0] $end
$var reg 32 $ b [31:0] $end
$var reg 32 % inst [31:0] $end
$scope module alu $end
$var wire 32 & dataA [31:0] $end
$var wire 32 ' dataB [31:0] $end
$var wire 32 ( inst [31:0] $end
$var wire 5 ) rs2 [4:0] $end
$var wire 5 * rs1 [4:0] $end
$var wire 5 + rd [4:0] $end
$var wire 7 , opcode [6:0] $end
$var wire 32 - jalr_add [31:0] $end
$var wire 32 . imm_U [31:0] $end
$var wire 32 / imm_S [31:0] $end
$var wire 32 0 imm_J [31:0] $end
$var wire 32 1 imm_I [31:0] $end
$var wire 32 2 imm_B [31:0] $end
$var wire 7 3 funct7 [6:0] $end
$var wire 3 4 funct3 [2:0] $end
$var reg 32 5 data_out [31:0] $end
$var reg 32 6 inst_o [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10001110011101000010010110110111 6
b10001110011101000010000000000000 5
b10 4
b1000111 3
b1111111111111111111100011101010 2
b1111111111111111111100011100111 1
b1111111111101000010100011100110 0
b1111111111111111111100011101011 /
b10001110011101000010000000000000 .
b1111111111111111111101010100100 -
b1101 ,
b1011 +
b1000 *
b111 )
b10001110011101000010010110110111 (
b1 '
b110111101 &
b10001110011101000010010110110111 %
b1 $
b110111101 #
b10001110011101000010010110110111 "
b10001110011101000010000000000000 !
$end
#10
